"""initial migration

Revision ID: d35eb63925cb
Revises: 
Create Date: 2025-10-13 16:09:41.323897

"""
import pgvector.sqlalchemy
from alembic import op
import sqlalchemy as sa


revision = 'd35eb63925cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dni_type', sa.Enum('CC', 'TI', 'CE', 'PP', name='document_type'), nullable=False),
    sa.Column('dni_number', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('second_last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('alternative_phone', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender_type'), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta_info', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_dni_number'), 'clients', ['dni_number'], unique=True)
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'EMPLOYEE', name='user_role'), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('attendances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('check_in', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('biometric_type', sa.String(), nullable=True),
    sa.Column('meta_info', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendances_client_id'), 'attendances', ['client_id'], unique=False)
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('client_biometrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('FACE', 'FINGERPRINT', name='biometric_type'), nullable=False),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('embedding_vector', pgvector.sqlalchemy.Vector(dim=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta_info', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_biometrics_client_id'), 'client_biometrics', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_biometrics_id'), 'client_biometrics', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_client_biometrics_id'), table_name='client_biometrics')
    op.drop_index(op.f('ix_client_biometrics_client_id'), table_name='client_biometrics')
    op.drop_table('client_biometrics')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_index(op.f('ix_attendances_client_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_dni_number'), table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###
